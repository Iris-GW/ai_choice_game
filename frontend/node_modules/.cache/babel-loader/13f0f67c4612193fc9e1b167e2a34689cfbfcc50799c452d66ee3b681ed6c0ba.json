{"ast":null,"code":"var _jsxFileName = \"/Users/guanhuawu/Documents/ai_choice_game/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// API base URL - change this to your backend server URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001';\nfunction App() {\n  _s();\n  const [story, setStory] = useState(\"\");\n  const [choices, setChoices] = useState([]);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]); // To keep track of story progress\n  const [choicesMade, setChoicesMade] = useState([]); // To track the choices player made\n  const [chapterSummaries, setChapterSummaries] = useState([]); // To store AI-generated summaries\n  const [moralAlignment, setMoralAlignment] = useState(\"neutral\"); // To track moral alignment\n  const [chapterLimit, setChapterLimit] = useState(10); // Default chapter limit (changed from 5 to 10)\n  const [showSetup, setShowSetup] = useState(true); // Show setup screen initially\n  const [gameEnded, setGameEnded] = useState(false); // Track if the game has ended\n  const [conclusion, setConclusion] = useState(\"\"); // Story conclusion\n\n  // Add custom chapter input\n  const [customChapterInput, setCustomChapterInput] = useState(\"10\");\n  const [useCustomChapter, setUseCustomChapter] = useState(false);\n\n  // Update chapter limit based on custom input\n  const handleCustomChapterChange = e => {\n    const value = e.target.value;\n    setCustomChapterInput(value);\n\n    // Convert to number and validate\n    const numValue = parseInt(value);\n    if (!isNaN(numValue) && numValue >= 3 && numValue <= 50) {\n      setChapterLimit(numValue);\n    }\n  };\n\n  // Helper function to create summary from story\n  const createSummary = text => {\n    // If text is short enough, return it as is\n    if (text.length <= 120) return text;\n\n    // Otherwise, truncate and add ellipsis\n    return text.substring(0, 117) + '...';\n  };\n\n  // Function to get AI-generated summary of a chapter and player's choice\n  const getSummaryForChapter = async (storyText, playerChoice) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/summarize`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          story: storyText,\n          choice: playerChoice\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate chapter summary');\n      }\n      const data = await response.json();\n      return data.summary;\n    } catch (error) {\n      console.error('Error getting chapter summary:', error);\n      return `You chose \"${playerChoice}\" and continued your journey...`;\n    }\n  };\n\n  // Function to get story conclusion\n  const getStoryConclusion = async () => {\n    try {\n      // Compile all chapter information\n      const chapters = chapterSummaries.concat(gameHistory[gameHistory.length - 1].story);\n      const response = await fetch(`${API_BASE_URL}/conclude`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chapters: chapters,\n          choices: choicesMade,\n          moral_alignment: moralAlignment\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate story conclusion');\n      }\n      const data = await response.json();\n      setConclusion(data.conclusion);\n      setGameEnded(true);\n    } catch (error) {\n      console.error('Error getting story conclusion:', error);\n      setConclusion(\"Your journey has reached its end. The choices you made have shaped your destiny, and now you stand at the threshold of a new beginning.\");\n      setGameEnded(true);\n    }\n  };\n\n  // Start game with selected chapter limit\n  const startGame = () => {\n    setShowSetup(false);\n    setLoading(true);\n    fetch(`${API_BASE_URL}/start`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Story received:\", data);\n      if (data.story) {\n        setStory(data.story);\n        setChoices(data.choices || []);\n        setStatusMessage(\"\");\n        if (data.session_id) {\n          setSessionId(data.session_id);\n        }\n\n        // Add to game history\n        setGameHistory([{\n          story: data.story,\n          choices: data.choices\n        }]);\n      } else {\n        setStatusMessage(\"Failed to generate the initial story.\");\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch the initial story:\", error);\n      setStatusMessage(`Failed to fetch the initial story: ${error.message}`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  // Function to handle player choice and fetch the next story\n  const handleChoice = (choice, choiceText) => {\n    if (!sessionId) {\n      setStatusMessage(\"Session ID is missing. Please restart the game.\");\n      return;\n    }\n    setLoading(true);\n    console.log(`Choice made: ${choice}, Session ID: ${sessionId}`);\n    setStatusMessage(\"Generating the next part of the story...\");\n\n    // Store the previous chapter content for summary generation\n    const currentChapterIndex = gameHistory.length - 1;\n    const currentChapterStory = gameHistory[currentChapterIndex].story;\n\n    // Add this choice to the choicesMade array\n    setChoicesMade(prev => [...prev, choiceText]);\n    fetch(`${API_BASE_URL}/choice`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        choice,\n        session_id: sessionId\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(async data => {\n      console.log(\"Next story received:\", data);\n      if (data.story) {\n        // First, generate summary for the PREVIOUS chapter plus the choice made\n        // This happens after we know the choice was successful\n        const summary = await getSummaryForChapter(currentChapterStory, choiceText);\n        setChapterSummaries(prev => [...prev, summary]);\n\n        // Then update current story and choices for the NEW chapter\n        setStory(data.story);\n        setChoices(data.choices || []);\n\n        // Update moral alignment if provided\n        if (data.moral_alignment) {\n          setMoralAlignment(data.moral_alignment);\n        }\n        setStatusMessage(\"\");\n\n        // Add to game history\n        const newGameHistory = [...gameHistory, {\n          story: data.story,\n          choices: data.choices\n        }];\n        setGameHistory(newGameHistory);\n\n        // Check if we've reached the chapter limit\n        if (newGameHistory.length >= chapterLimit) {\n          // Generate the conclusion for the story\n          await getStoryConclusion();\n        }\n      } else if (data.error) {\n        setStatusMessage(`Error: ${data.error}`);\n      } else {\n        setStatusMessage(\"Failed to generate the next part of the story.\");\n      }\n    }).catch(error => {\n      console.error(\"Error processing your choice:\", error);\n      setStatusMessage(`Error processing your choice: ${error.message}`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  // Function to restart the game\n  const restartGame = () => {\n    setStory(\"\");\n    setChoices([]);\n    setSessionId(null);\n    setGameHistory([]);\n    setChoicesMade([]);\n    setChapterSummaries([]);\n    setMoralAlignment(\"neutral\");\n    setStatusMessage(\"\");\n    setGameEnded(false);\n    setConclusion(\"\");\n    setShowSetup(true); // Show setup screen again\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showSetup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setup-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Adventure Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chapter-limit\",\n          children: [\"How many chapters would you like your adventure to have?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setup-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: !useCustomChapter ? \"toggle-active\" : \"\",\n              onClick: () => setUseCustomChapter(false),\n              children: \"Choose Preset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: useCustomChapter ? \"toggle-active\" : \"\",\n              onClick: () => setUseCustomChapter(true),\n              children: \"Custom Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), useCustomChapter ?\n          /*#__PURE__*/\n          /* Custom chapter input */\n          _jsxDEV(\"div\", {\n            className: \"custom-chapter-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"custom-chapter-limit\",\n              min: \"3\",\n              max: \"50\",\n              value: customChapterInput,\n              onChange: handleCustomChapterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"chapters (3-50)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this) :\n          /*#__PURE__*/\n          /* Standard slider for preset values */\n          _jsxDEV(\"div\", {\n            className: \"chapter-selection\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"chapter-limit\",\n              min: \"3\",\n              max: \"20\",\n              value: chapterLimit,\n              onChange: e => setChapterLimit(parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [chapterLimit, \" chapters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"setup-info\",\n          children: chapterLimit < 10 ? \"A shorter adventure will conclude quickly, offering a concise experience.\" : chapterLimit < 20 ? \"A medium-length adventure balances story depth with completion time.\" : \"An epic journey allows for rich character development and complex storylines.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          onClick: startGame,\n          children: \"Begin Your Adventure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `moral-indicator ${moralAlignment}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Character Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"moral-meter\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moral-label good\",\n              children: \"Virtuous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moral-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `moral-fill ${moralAlignment}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moral-label evil\",\n              children: \"Dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chapter-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Journey Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${gameHistory.length / chapterLimit * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-text\",\n            children: [\"Chapter \", gameHistory.length, \" of \", chapterLimit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), gameHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"journey-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chapter\",\n            children: [\"Chapter \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 33\n          }, this), index < chapterSummaries.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chapter-summary\",\n            children: chapterSummaries[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 37\n          }, this), index >= chapterSummaries.length && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"story-summary\",\n              children: createSummary(entry.story)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 41\n            }, this), index < choicesMade.length && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choice-made\",\n              children: [\"\\u2192 \", choicesMade[index]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AI Choice Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue-box\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading your adventure...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 33\n          }, this) : gameEnded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"conclusion-title\",\n              children: \"The End of Your Journey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"conclusion-text\",\n              children: conclusion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : story ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for your story to begin...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choice-box\",\n          children: gameEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: restartGame,\n            className: \"restart-button\",\n            children: \"Start a New Adventure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 33\n          }, this) : !loading && choices.length > 0 ? choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleChoice(index + 1, choice),\n            className: \"choice-button\",\n            disabled: loading,\n            children: choice\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 37\n          }, this)) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading choices...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: restartGame,\n            className: \"choice-button\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-box\",\n          children: statusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dNS+PRdoGESaT0k1wbdxPhT1DAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","App","_s","story","setStory","choices","setChoices","statusMessage","setStatusMessage","sessionId","setSessionId","loading","setLoading","gameHistory","setGameHistory","choicesMade","setChoicesMade","chapterSummaries","setChapterSummaries","moralAlignment","setMoralAlignment","chapterLimit","setChapterLimit","showSetup","setShowSetup","gameEnded","setGameEnded","conclusion","setConclusion","customChapterInput","setCustomChapterInput","useCustomChapter","setUseCustomChapter","handleCustomChapterChange","e","value","target","numValue","parseInt","isNaN","createSummary","text","length","substring","getSummaryForChapter","storyText","playerChoice","response","fetch","method","headers","body","JSON","stringify","choice","ok","Error","data","json","summary","error","console","getStoryConclusion","chapters","concat","moral_alignment","startGame","then","status","log","session_id","catch","message","finally","handleChoice","choiceText","currentChapterIndex","currentChapterStory","prev","newGameHistory","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","type","id","min","max","onChange","style","width","map","entry","index","disabled","_c","$RefreshReg$"],"sources":["/Users/guanhuawu/Documents/ai_choice_game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// API base URL - change this to your backend server URL\nconst API_BASE_URL = 'http://localhost:5001';\n\nfunction App() {\n    const [story, setStory] = useState(\"\");\n    const [choices, setChoices] = useState([]);\n    const [statusMessage, setStatusMessage] = useState(\"\"); \n    const [sessionId, setSessionId] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [gameHistory, setGameHistory] = useState([]); // To keep track of story progress\n    const [choicesMade, setChoicesMade] = useState([]); // To track the choices player made\n    const [chapterSummaries, setChapterSummaries] = useState([]); // To store AI-generated summaries\n    const [moralAlignment, setMoralAlignment] = useState(\"neutral\"); // To track moral alignment\n    const [chapterLimit, setChapterLimit] = useState(10); // Default chapter limit (changed from 5 to 10)\n    const [showSetup, setShowSetup] = useState(true); // Show setup screen initially\n    const [gameEnded, setGameEnded] = useState(false); // Track if the game has ended\n    const [conclusion, setConclusion] = useState(\"\"); // Story conclusion\n    \n    // Add custom chapter input\n    const [customChapterInput, setCustomChapterInput] = useState(\"10\");\n    const [useCustomChapter, setUseCustomChapter] = useState(false);\n\n    // Update chapter limit based on custom input\n    const handleCustomChapterChange = (e) => {\n        const value = e.target.value;\n        setCustomChapterInput(value);\n        \n        // Convert to number and validate\n        const numValue = parseInt(value);\n        if (!isNaN(numValue) && numValue >= 3 && numValue <= 50) {\n            setChapterLimit(numValue);\n        }\n    };\n\n    // Helper function to create summary from story\n    const createSummary = (text) => {\n        // If text is short enough, return it as is\n        if (text.length <= 120) return text;\n        \n        // Otherwise, truncate and add ellipsis\n        return text.substring(0, 117) + '...';\n    };\n\n    // Function to get AI-generated summary of a chapter and player's choice\n    const getSummaryForChapter = async (storyText, playerChoice) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/summarize`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    story: storyText,\n                    choice: playerChoice\n                })\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to generate chapter summary');\n            }\n            \n            const data = await response.json();\n            return data.summary;\n        } catch (error) {\n            console.error('Error getting chapter summary:', error);\n            return `You chose \"${playerChoice}\" and continued your journey...`;\n        }\n    };\n\n    // Function to get story conclusion\n    const getStoryConclusion = async () => {\n        try {\n            // Compile all chapter information\n            const chapters = chapterSummaries.concat(gameHistory[gameHistory.length - 1].story);\n            \n            const response = await fetch(`${API_BASE_URL}/conclude`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    chapters: chapters,\n                    choices: choicesMade,\n                    moral_alignment: moralAlignment\n                })\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to generate story conclusion');\n            }\n            \n            const data = await response.json();\n            setConclusion(data.conclusion);\n            setGameEnded(true);\n        } catch (error) {\n            console.error('Error getting story conclusion:', error);\n            setConclusion(\"Your journey has reached its end. The choices you made have shaped your destiny, and now you stand at the threshold of a new beginning.\");\n            setGameEnded(true);\n        }\n    };\n\n    // Start game with selected chapter limit\n    const startGame = () => {\n        setShowSetup(false);\n        setLoading(true);\n        \n        fetch(`${API_BASE_URL}/start`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log(\"Story received:\", data);\n                \n                if (data.story) {\n                    setStory(data.story);\n                    setChoices(data.choices || []);\n                    setStatusMessage(\"\");\n                    \n                    if (data.session_id) {\n                        setSessionId(data.session_id);\n                    }\n                    \n                    // Add to game history\n                    setGameHistory([{\n                        story: data.story,\n                        choices: data.choices\n                    }]);\n                } else {\n                    setStatusMessage(\"Failed to generate the initial story.\");\n                }\n            })\n            .catch((error) => {\n                console.error(\"Failed to fetch the initial story:\", error);\n                setStatusMessage(`Failed to fetch the initial story: ${error.message}`);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    // Function to handle player choice and fetch the next story\n    const handleChoice = (choice, choiceText) => {\n        if (!sessionId) {\n            setStatusMessage(\"Session ID is missing. Please restart the game.\");\n            return;\n        }\n\n        setLoading(true);\n        console.log(`Choice made: ${choice}, Session ID: ${sessionId}`);\n        setStatusMessage(\"Generating the next part of the story...\");\n        \n        // Store the previous chapter content for summary generation\n        const currentChapterIndex = gameHistory.length - 1;\n        const currentChapterStory = gameHistory[currentChapterIndex].story;\n        \n        // Add this choice to the choicesMade array\n        setChoicesMade(prev => [...prev, choiceText]);\n        \n        fetch(`${API_BASE_URL}/choice`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                choice, \n                session_id: sessionId \n            })\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            return response.json();\n        })\n        .then(async data => {\n            console.log(\"Next story received:\", data);\n            \n            if (data.story) {\n                // First, generate summary for the PREVIOUS chapter plus the choice made\n                // This happens after we know the choice was successful\n                const summary = await getSummaryForChapter(currentChapterStory, choiceText);\n                setChapterSummaries(prev => [...prev, summary]);\n                \n                // Then update current story and choices for the NEW chapter\n                setStory(data.story);\n                setChoices(data.choices || []);\n                \n                // Update moral alignment if provided\n                if (data.moral_alignment) {\n                    setMoralAlignment(data.moral_alignment);\n                }\n                \n                setStatusMessage(\"\");\n                \n                // Add to game history\n                const newGameHistory = [...gameHistory, {\n                    story: data.story,\n                    choices: data.choices\n                }];\n                setGameHistory(newGameHistory);\n                \n                // Check if we've reached the chapter limit\n                if (newGameHistory.length >= chapterLimit) {\n                    // Generate the conclusion for the story\n                    await getStoryConclusion();\n                }\n            } else if (data.error) {\n                setStatusMessage(`Error: ${data.error}`);\n            } else {\n                setStatusMessage(\"Failed to generate the next part of the story.\");\n            }\n        })\n        .catch((error) => {\n            console.error(\"Error processing your choice:\", error);\n            setStatusMessage(`Error processing your choice: ${error.message}`);\n        })\n        .finally(() => {\n            setLoading(false);\n        });\n    };\n\n    // Function to restart the game\n    const restartGame = () => {\n        setStory(\"\");\n        setChoices([]);\n        setSessionId(null);\n        setGameHistory([]);\n        setChoicesMade([]);\n        setChapterSummaries([]);\n        setMoralAlignment(\"neutral\");\n        setStatusMessage(\"\");\n        setGameEnded(false);\n        setConclusion(\"\");\n        setShowSetup(true); // Show setup screen again\n    };\n\n    return (\n        <div className=\"App\">\n            {showSetup ? (\n                <div className=\"setup-screen\">\n                    <h1>Adventure Setup</h1>\n                    <div className=\"setup-form\">\n                        <label htmlFor=\"chapter-limit\">\n                            How many chapters would you like your adventure to have?\n                            \n                            {/* Toggle between slider and custom input */}\n                            <div className=\"setup-toggle\">\n                                <button \n                                    className={!useCustomChapter ? \"toggle-active\" : \"\"}\n                                    onClick={() => setUseCustomChapter(false)}\n                                >\n                                    Choose Preset\n                                </button>\n                                <button \n                                    className={useCustomChapter ? \"toggle-active\" : \"\"}\n                                    onClick={() => setUseCustomChapter(true)}\n                                >\n                                    Custom Length\n                                </button>\n                            </div>\n                            \n                            {useCustomChapter ? (\n                                /* Custom chapter input */\n                                <div className=\"custom-chapter-input\">\n                                    <input \n                                        type=\"number\" \n                                        id=\"custom-chapter-limit\" \n                                        min=\"3\" \n                                        max=\"50\" \n                                        value={customChapterInput}\n                                        onChange={handleCustomChapterChange}\n                                    />\n                                    <span>chapters (3-50)</span>\n                                </div>\n                            ) : (\n                                /* Standard slider for preset values */\n                                <div className=\"chapter-selection\">\n                                    <input \n                                        type=\"range\" \n                                        id=\"chapter-limit\" \n                                        min=\"3\" \n                                        max=\"20\" \n                                        value={chapterLimit} \n                                        onChange={(e) => setChapterLimit(parseInt(e.target.value))}\n                                    />\n                                    <span>{chapterLimit} chapters</span>\n                                </div>\n                            )}\n                        </label>\n                        \n                        <p className=\"setup-info\">\n                            {chapterLimit < 10 ? \n                                \"A shorter adventure will conclude quickly, offering a concise experience.\" :\n                                chapterLimit < 20 ? \n                                    \"A medium-length adventure balances story depth with completion time.\" :\n                                    \"An epic journey allows for rich character development and complex storylines.\"\n                            }\n                        </p>\n                        \n                        <button className=\"start-button\" onClick={startGame}>\n                            Begin Your Adventure\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <>\n                    {/* Story Journey Sidebar */}\n                    <div className=\"sidebar\">\n                        {/* Add moral alignment indicator */}\n                        <div className={`moral-indicator ${moralAlignment}`}>\n                            <h3>Character Path</h3>\n                            <div className=\"moral-meter\">\n                                <div className=\"moral-label good\">Virtuous</div>\n                                <div className=\"moral-bar\">\n                                    <div className={`moral-fill ${moralAlignment}`}></div>\n                                </div>\n                                <div className=\"moral-label evil\">Dark</div>\n                            </div>\n                        </div>\n\n                        <div className=\"chapter-progress\">\n                            <h3>Journey Progress</h3>\n                            <div className=\"progress-bar\">\n                                <div \n                                    className=\"progress-fill\" \n                                    style={{width: `${(gameHistory.length / chapterLimit) * 100}%`}}\n                                ></div>\n                            </div>\n                            <div className=\"progress-text\">\n                                Chapter {gameHistory.length} of {chapterLimit}\n                            </div>\n                        </div>\n\n                        <h2>Your Journey</h2>\n                        {gameHistory.map((entry, index) => (\n                            <div key={index} className=\"journey-entry\">\n                                <div className=\"chapter\">Chapter {index + 1}</div>\n                                \n                                {/* Show the AI summary for completed chapters (we have a summary) */}\n                                {index < chapterSummaries.length && (\n                                    <div className=\"chapter-summary\">{chapterSummaries[index]}</div>\n                                )}\n                                \n                                {/* For chapters without summary (current chapter), show raw content */}\n                                {index >= chapterSummaries.length && (\n                                    <>\n                                        <div className=\"story-summary\">{createSummary(entry.story)}</div>\n                                        {index < choicesMade.length && (\n                                            <div className=\"choice-made\">→ {choicesMade[index]}</div>\n                                        )}\n                                    </>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                    \n                    {/* Main Game Content */}\n                    <div className=\"main-content\">\n                        <h1>AI Choice Game</h1>\n\n                        {/* Dialogue box for displaying the story or conclusion */}\n                        <div className=\"dialogue-box\">\n                            {loading ? (\n                                <p>Loading your adventure...</p>\n                            ) : gameEnded ? (\n                                <>\n                                    <h2 className=\"conclusion-title\">The End of Your Journey</h2>\n                                    <p className=\"conclusion-text\">{conclusion}</p>\n                                </>\n                            ) : story ? (\n                                <p>{story}</p>\n                            ) : (\n                                <p>Waiting for your story to begin...</p>\n                            )}\n                        </div>\n\n                        {/* Choice buttons or restart button */}\n                        <div className=\"choice-box\">\n                            {gameEnded ? (\n                                <button onClick={restartGame} className=\"restart-button\">\n                                    Start a New Adventure\n                                </button>\n                            ) : !loading && choices.length > 0 ? (\n                                choices.map((choice, index) => (\n                                    <button \n                                        key={index} \n                                        onClick={() => handleChoice(index + 1, choice)}\n                                        className=\"choice-button\"\n                                        disabled={loading}\n                                    >\n                                        {choice}\n                                    </button>\n                                ))\n                            ) : loading ? (\n                                <p>Loading choices...</p>\n                            ) : (\n                                <button onClick={restartGame} className=\"choice-button\">\n                                    Start New Game\n                                </button>\n                            )}\n                        </div>\n\n                        {/* Status message */}\n                        {statusMessage && <div className=\"status-box\">{statusMessage}</div>}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}